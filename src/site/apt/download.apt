 ---
 Download
 ---
 blerubrus (via b2do MyApt program)
 ---
 
Download

 This page proposes the latest binary distribution of the <<myApt>> software.
 
===

 Table Of Contents
 
%{toc|fromDepth=2}

=== 


 
~~ ***
~~ WARNING: the version must be consistent in download.apt and usage.apt pages
~~ ***

* {bworld-myApt Version 1.6-SNAPSHOT Build 2017-06-01 13:02:09}
 
   * Java Executable Archive : {{{./myApt.jar}myApt.jar}}
   
   * Shortcut shell scripts for Unix-based users (unchanged since previous version):

      * {{{./myApt.sh}myApt.sh}}
      
      * {{{./myAptLink.sh}myAptLink.sh}}
   
      * {{{./myAptMonthDone.sh}myAptMonthDone.sh}}
      
      * {{{./myAptResources.sh}myAptResources.sh}}
      
      * {{{./myAptImageDir.sh}myAptImageDir.sh}}
      
      * {{{./myAptImageFile.sh}myAptImageFile.sh}}
   
      []
      
   []
   
 Please consult the {{{./usage.html}Usage}} page for install configuration and usage.
 
* {What's new?}


** {From 1.5-SNAPSHOT to 1.6-SNAPSHOT}

 "myAptLink" now handles input first parameter that starts with "<<<http>>>" as an external link to this given URL. 

 Please see  {{{./usage_myAptLink.html}usage_myAptLink}} for further info.

** {From 1.4-SNAPSHOT to 1.5-SNAPSHOT}

  "myAptLink" now manages the user input first parameter that can be a reference to an apt source file. To be clear, the previous version of myAptLink was designed to create a link to a file in the <<<src/site/resources/>>> folder, this new version aims at also creating a link to the html version that will be generated from an apt file referenced by the user in the <<<src/site/apt>>> folder.

 Please see  {{{./usage_myAptLink.html}usage_myAptLink}} for further info.

** {From 1.3-SNAPSHOT to 1.4-SNAPSHOT Build 2016-01-10 12:36:41}

 Warning: pending, work in progress version... The code is the more and more duplicated to manage resources, images and links... To be refactored in myApt v2!!!
 
 Created a git branch named <<<myaptlink>>> (then merged) in order to manage a new type of output. Quick Specifications of this new feature (upgrading the pom.xml project version to <<<1.4-SNAPSHOT>>>):

 Objective: output to the console the apt code for an hyperlink to a resource file or directory whose name is given on the command line. Without second parameter given on the command line, the label of the link is the filename (or dir name, with or without path, to be discussed). If a given label is given as second parameter on the command line, this input is used in the apt code.

 Examples:

   * typing "<<<myAptLink src/site/resources/folder/filename>>>" (assuming that <<<src/site/resources/folder/filename>>> exists) returns to the console the following string:

+--+
$ myAptLink src/site/resources/folder/filename
 {{{./folder/filename}filename}}
$
+--+


   * With two parameters on the command line:

+--+
$ myAptLink src/site/resources/folder/filename label
 {{{./folder/filename}label}}
$
+--+

 This feature allows to simply insert the apt code for a link to a resource file (copy paste or using from vim the <<!r:>> command, for example).

 When the path to an existing directory is given as first argument, this "myAptLink" is quite similar to "myAptResources" in previous version, but towards version 2 of the project.

 To be discussed: for an image file (baseed on the extension), the output also includes the apt code to display the image. "myAptLink" might replace both "myAptImage*" and "myAptResources" scripts...

 In myApt v2, perhaps the generation of the apt file should be poarametered with for example an "<<<-outputFileName>>>" argument on the command line...
 
** {From 1.2-SNAPSHOT 2015-10-30 to 1.3-SNAPSHOT 2015-11-05}

 New version of the <<<myApt.jar>>> file with esthetic modifications in terms of apt generation:
 
   * the "<myAptResources>" now separates the files items with the name of the browsed folder (useful for recursive option).
   Note that there may be some cuts of the listing for a given directory because of the alphabetic sort of
   path and filename. For example, subfolders may be listed before the content of the current directory because of their names.
   
   * the "<myAptImageDir>" now separates   each image by a "===" apt code (generates a separator line in the html version).
   
 Upgraded to "1.3-SNAPSHOT" the version in the <<<pom.xml>>>. Please note that this version also tests an experiment on
 the Maven multi-modules. myApt Maven module now references the "bworld" Maven parent module. Consequently, the <<<myApt/src/site/site.xml>>>
 has been reduced and now inherits on the parent specifications. 

** {From 2015-10-26 to 2015-10-30}

 myAptImageDir now lists files in the alphabetical order.

** {From 2015-10-03 to 2015-10-26}

 The "myAptResources" now displays a "preview" of the generated apt file core content to the console.
 
 The listing is now alphabetically sorted on path and filename (not only path ;)

** {From 2015-10-02 to 2015-10-03}

 Previous version of <<<myAptImageDir>>> returns an empty list for a directory only containing image files in the jpeg format.
 
 Fixed the list of supported images files extensions: added <<<.jpeg>>> (<<<.JPEG>>> was present twice)

** {From 2015-07-27 to 2015-10-02}

 MyApt: the label "Table of Contents:" is now added before the macro doxia instruction.
 
 MyAptImageDir: changed the specifications, new output style named "listing", allowing to generate an apt file with the listing
 of all image files in the given directory as argument (no more gallery).
 
 MyAptImageFile: for an unique image file, generates an apt file with a link and the display of the given image as argument.

** {From 2015-05-21 to 2015-07-27}

 The "apt calendar" (when using myAptMonthDone script) section date format has been updated:
 (added brackets around the yyyy-MM-dd to generate anchors):
   
      * before:
   
+--+
* 2013-05-01 (Wednesday)
+--+

      * now:
      
+--+
* {2013-05-01} (Wednesday)
+--+

      []

** {From 2015-05-15 to 2015-05-21}

 Improvement suggested by Camille: add the Doxia Macro TOC instruction in generated apt files.
 Consequently:
 
   * the jar now manages the <<<-Dtoc>>> argument to include the Doxia Macro TOC instruction in the generated "myApt" files
   (no meaning for myAptResources, myAptMonthDone or myAptImage).   
   
   * by default, the <<<myApt.sh>>> script now invokes the jar command with this <<<-Dtoc>>> argument.
 
 Bug fixed:
 
   * Fixed the console output message when typing "<<<java myApt.jar filename title>>>" without
   the expected argument prefixes: "<<<-Dtarget=filename -Dtitle=title>>>". In the first
   case (omitted argument prefixes), the myApt program considers than none argument has been given,
   it generates an apt file with the default name and the default title. Before: the console output
   could not find the title and the filename, it wrote "null".
   
   * Removed ignored JUnit tests.
   
   []
 
** {From 1.0-SNAPSHOT to 1.1-SNAPSHOT Build 2015-05-15}

 Instead of Subversion, the project now uses {{{https://git-scm.com/}Git}}.
 
 Project sources are now hosted on {{{https://github.com/blerubrus/myApt}GitHub}} (forge imag private project, previously).
 
 This web site is now deployed at {{http://bworld.free.fr/myApt/}}.
  
 The insertion of Subversion RCS auto-substituted keywords (<<<Id>>>, <<<URL>>>, <<<Author>>>, <<<Revision>>>, <<<Date>>>)
 in the generated apt files is now optional and not the default behaviour anymore. To add these
 keywords, add the argument "<<<-Dscm=svn>>>" when invoking the jar file, or "<<<svn>>>" when using
 the shortcut shell scripts. 

