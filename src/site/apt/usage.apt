 ---
 Usage - Install
 ---
 blerubrus (via b2do MyApt program)
 ---
 2012-04-15
 
Usage - Install

 The <<myApt>> program proposes a quick generator of custom files in the <Almost Plain Text> (APT) format.
 See {{{http://maven.apache.org/doxia/references/apt-format.html}The APT format}} on {{{http://maven.apache.org}Maven}} Web Site for
 further information about this format mainly used for the creation of Maven
 project documentation web site.
 
 Please read the {{Install}} section then the various features of the <<myApt>> tool:
 
 * {{{./usage_myApt.html}myApt}} to create a simple apt file (see {{{./sample_myApt.html}Sample - myApt}});
 
 * {{{./usage_myAptResources.html}myAptResources}} to generate an apt file with a list of links to each file located in a given directory
 (see {{{./sample_myAptResources.html}Sample - myAptResources}});
 
 * {{{./usage_myAptMonthDone.html}myAptMonthDone}} to generate an apt file with a calendar listing the days of a given month
 (see {{{./sample_myAptMonthDone.html}Sample - myAptMonthDone}});;
 
 * {{{./usage_myAptImage}myAptImage}} (<experimental>) to generate a custom apt file displaying an image.
 
 []
 
===

 Table Of Contents
 
%{toc|fromDepth=2}

=== 

* {Install}

 <<myApt>> software is distributed as a Java executable archive file and a set of ready-to-use shortcut shell scripts for Unix-based users.
 See the {{{./download.html}Download}} page for the latest version of these files.
 
 Requirements: a Java Runtime Environment version 1.6 or upper correctly installed on your system.
 
 
** {Windows users}

 Windows-based users can only use the jar file. {{{./download.html}Download}} the jar file and locate it in 
 a directory of your choice. In the following, the instructions will indicate "<<<path/to/myApt.jar>>>"
 where "<<<path/to/>>>" must be replaced with the path to the directory where the jar file is located.

** {Unix-based users (Linux, Mac)}

 Besides the <<<myApt.jar>>> main file, Unix-based users can benefit of shortcut shell scripts that
 simplify the invocation of arguments.
  
 Copy all "<<<myApt>>>" files available in the {{{./download.html}Download}} page to 
 a directory of your choice, for example, "<<<path/to/myApt-version-folder>>>".
 
 
  Turn all <<<myApt*>>> files to executable:
 
+---+
$ cd myApt-version-folder
$ chmod +x myApt*
+---+
 
 Create symbolic links to these files in your "<<<~/bin/>>>" directory.
 Thus, "<<<myApt*>>>" commands are available from your system <<<Path>>> environment variable.
 
 To recognize the symbolic links, you can use filenames without the "<<<.sh>>>" extension.
 Note that the symbolic link to the <<<myApt.jar>>> file must be named <<<myApt.jar>>> too, since
 the path to this jar file is hardcoded as "<<<~/bin/myApt.jar>>>" in the shell scripts. Example to 
 create the symbolic links:
 
 
+--+
cd ~/bin
ln -s path/to/myApt-version-folder/myApt.jar myApt.jar
ln -s path/to/myApt-version-folder/myApt.sh myApt
ln -s path/to/myApt-version-folder/myAptResources.sh myAptResources
ln -s path/to/myApt-version-folder/myAptMonthDone.sh myAptMonthDone
ln -s path/to/myApt-version-folder/myAptImageDir.sh myAptImageDir
+--+

 From now, here is the expected list of files in this "<<<~/bin/>>>" directory:
 
+---+
~/bin/
 |- myApt.jar
 |- myApt
 |- myAptImageDir
 |- myAptMonthDone
 |- myAptResources
+---+

* {Test: version}

 The first expected feature of <<myApt>> software is to display its version:
 
   * windows users: open a Dos console in the directory where the jar file is located and type:
   
   <<java -jar myApt.jar -v>>.
   
   * unix-based users: open a new terminal and type
   
   <<myApt -v>>
   
   []
 
 Expected output (to be double-checked with the current version written in the {{{./download.html}download}} page): 
 
+--+
bworld-myApt Version 1.1-SNAPSHOT Build 2015-05-21 16:18:58
+--+

~~ WARNING: the given output must be consistent with the value given in download.apt page 

 The version of the jar file can also be checked by unzipping the jar file (<<unzip myApt.jar>>) then read the content
 of the files named:
 
   * <<<bworld-myApt_version.properties>>>
   
   This properties file is automatically updated by Maven during the build process of the jar file. It contains the
   project version and the build date as two key-value pairs, example:

+--+   
project.version=1.1-SNAPSHOT
build.date=2015-05-21 16:18:58
+--+

   * <<<META-INF/MANIFEST.MF>>>
   
   This file is also created by the Maven build process. Example of its content:
   
+--+
Manifest-Version: 1.0
Implementation-Title: bworld-myApt
Implementation-Version: 1.1-SNAPSHOT
Built-By: blerubrus
Specification-Vendor: bworld
Created-By: Apache Maven
Build-date: 2015-05-21 16:18:58
Implementation-Vendor: bworld
Implementation-Vendor-Id: fr.free.bworld
Build-Jdk: 1.6.0_35
Specification-Title: bworld-myApt
Specification-Version: 1.1-SNAPSHOT
Implementation-Build: 
Main-Class: fr.free.bworld.myapt.Main
Archiver-Version: Plexus Archiver
+--+

   []
