 ---
 Usage - myAptImage
 ---
 blerubrus (with bworld-myApt)
 ---
 2015-05-14

Usage - myAptImage

 The "myAptImage" tool aims at generating code in {{{http://maven.apache.org/doxia/references/apt-format.html}The APT format}}
 to display an image in the generated Web page of a Maven Web Site.
 
 Input: 
 
   * a path to an image file (see {{myAptImageFile}})
   
   * or a path to a directory containing images (see {{myAptImageDir}})
   
   []
   
 Ideally, this image file or directory is located in a sub folder of a Maven Web site resources folder "<<<src/site/resources/>>>" directory.
 
 Output: both scripts <<<myAptImageFile.sh>>> and <<<myAptImageDir.sh>>> generate an apt file in the current directory,
 this file contains the apt code to display a link and the image in apt format.
 
   [Note:] Previous version of myAptImage (before October 2015) used to have the following objective in terms of output:
   
   one apt file for each image + a file containing the xml
   instructions for the menu (one item per apt) + a file in xdoc format (see {{{https://maven.apache.org/doxia/references/xdoc-format.html}Doxia XDOC format}})
   to display a gallery of thumbs. See {{{./usage_myAptImageGallery.html}gallery}}.
   
   []
 
 See also the {{{./sample.html}Sample}} menu section for an example of the expected result.
 
===

 Table Of Contents
 
%{toc|fromDepth=2}

===  
 
* {myAptImageFile}

 Aim: generate an apt file displaying an existing image. The generated apt file is named with the image filename
 as prefix, then the "<<<.apt>>>" extension.
 
 For this aim, the myApt main method proposes the following argument:
 
   * <<-DimageFile=path/to/imageFilename>>\
   indicates to generate an apt image file for the specified path to the existing image.
   
   * <<-Dscm=svn>>\
   to inject Subversion RCS keywords in the generated apt file.
   
   []

 Usage example:
 
   * assuming that this Maven Web Site Project file path exists: <<<src/site/resources/myAptImageTest/20140309_SunsetShot.jpg>>>
 
   * type in the root folder of this maven project:
   
+--+
java -jar myApt.jar -DimageFile=src/site/resources/myAptImageTest/20140309_SunsetShot.jpg
+--+

   The previous command is equivalent to the script:
   
+--+
myAptImageFile src/site/resources/myAptImageTest/20140309_SunsetShot.jpg
+--+
 
 Command execution expected output:

+---+
$ java -jar ~/bin/myApt.jar -DimageFile=src/site/resources/myAptImageDirTest/20140309_SunsetShot.jpg
=== Preview ===
[./images/20140309_SunsetShot.jpg]

 View image only: {{./images/20140309_SunsetShot.jpg}}
===============
Successfully created the apt file: /home/blerubrus/workspace/myApt/20140309_SunsetShot.jpg.apt
Build succeeded!
   Generated apt file 20140309_SunsetShot.jpg.apt
You may wish to add the following line in the site.xml file:
   <item name="2015-05-19_myApt.apt" href="20140309_SunsetShot.jpg.html"/>

+---+

 The generated filename is the name of the target image + the apt extension, it is created in the current folder.
 This file contains the following APT code: 

+--+
 ---
 20140309_SunsetShot.jpg
 ---
 blerubrus (with bworld-myApt)
 ---
 2015-05-19

20140309_SunsetShot.jpg



[./images/20140309_SunsetShot.jpg]

 View image only: {{./images/20140309_SunsetShot.jpg}}

+--+

 Once the html version generated with the <<mvn site>> command, the document is shown in {{{./20140309_SunsetShot.jpg.html}Sample - myAptImage 3}}.


* {myAptImageDir}

 Aim: generate an apt file containing the code to display a link and the image for each image file found in a specified folder.
 
 This tool considers that a file is an image file if its filename extension is one of "jpg, jpeg, svg, gif, png" (case-unsensitive).
 
  
 Input: a path to a directory.
 
 Output: a file named "<<<yyyyMMddhhmm_myAptImage.apt>>>" in the current directory.
 This file contains a link and the apt code to display the images found in the given directory.
 
 Example:
 
 Let us assume that we want to list the images in the "<<<src/site/resources/>>>" folder of this project.
 There are currently 5 image files named so: 
 

+--+
201505141158_myAptResources.png
201505141158_myAptResourcesResult.png
monthDoneExecution.png
myAptMonthDone.png
myAptMonthDoneResult.png
+--+
 
 Locate a terminal prompt in the "root" folder of this project.
 
 Type: <<myAptImageDir src/site/resources/>>
 
 A preview of the generated apt file body is displayed to the console:
 
+--+
blerubrus@mars:~/workspace/myApt$ myAptImageDir src/site/resources/
=== Preview ===


[./monthDoneExecution.png]

 Link to this image file: {{{./monthDoneExecution.png}monthDoneExecution.png}}


[./201505141158_myAptResources.png]

 Link to this image file: {{{./201505141158_myAptResources.png}201505141158_myAptResources.png}}


[./myAptMonthDoneResult.png]

 Link to this image file: {{{./myAptMonthDoneResult.png}myAptMonthDoneResult.png}}


[./201505141158_myAptResourcesResult.png]

 Link to this image file: {{{./201505141158_myAptResourcesResult.png}201505141158_myAptResourcesResult.png}}


[./myAptMonthDone.png]

 Link to this image file: {{{./myAptMonthDone.png}myAptMonthDone.png}}

===============
Successfully created the apt 'image' file: /home/blerubrus/workspace/myApt/201510021523_myAptImage.apt
Build succeeded!
   Generated apt file 201510021523_myAptImage.apt
You may wish to add the following line in the site.xml file:
   null
+--+

 As indicated by the message, a file named <<<yyyyMMddhhmm_myAptImage.apt>>> is generated 
 (here, <<<201510021523_myAptImage.apt>>>) in the current folder, the body of this file contains
 the code shown in the preview: for each file, the code to display it, and a link to this file.
 
 



